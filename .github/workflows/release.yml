name: Release Package

on:
  pull_request:
    types: 
      - closed 
    branches:
      - master

jobs:
  Publish-release:
    runs-on: ubuntu-latest
    
    env:
      USERNAME: cadu1982
      REPO: cadu1982/github-actions
      CAMINHO_PROJETO: ./Groffe.Distancias/Groffe.Distancias.csproj
      # NUGET_SERVER: https://api.nuget.org/v3/index.json 
      DIR: ${{ github.workspace }}/output
      
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    
    - name: Semantic versioning
      id: versioning
      uses: paulhatch/semantic-version@v4.0.2
      with:
        tag_prefix: ''
        major_pattern: "break:"
        minor_pattern: "feat:"
        patch_pattern: "fix:"
        format: "${major}.${minor}.${patch}"

    - name: Build Project and Generate Package
      run: dotnet pack ${{ env.CAMINHO_PROJETO }} -c Release -p:PackageVersion=${{ steps.versioning.outputs.version }} -o ${{ env.DIR }}

    - name: Push Package on GitHub Package Registry
      run: |
        dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/OWNER/index.json"
        dotnet nuget push '${{ env.DIR }}/*.nupkg' --api-key ${{ secrets.MY_TOKEN }} --source github --skip-duplicate
    
    - name: Create Release
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
      with:
        tag_name: ${{ steps.versioning.outputs.version }}
        release_name: ${{ steps.versioning.outputs.version }}
        prerelease: false

    